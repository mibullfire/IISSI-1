
### This is an auto-generated test suite, it needs to be completed with valid data.
### These are not all tests you need, more of them should be created to evaluate the functional
### requirements of your project. These tests only test the CRUD endpoints of the entity.
### Silence is a DEAL research team project, more info about us in https://deal.us.es
@BASE = http://127.0.0.1:8080/api/v1

### Auxiliary query
### Positive test
### Test 00: Get all existing denominacionorigen
### This query is used in several of the below tests it should be executed first.
# @name denominacionorigen
GET {{BASE}}/denominacionorigen

### Login a(n) users and save the generated token 
### This token is used in several of the below tests it should be executed second.
# @name login
POST {{BASE}}/login 
Content-Type: application/json 

{ 
	"username": ###REPLACE###,
	"password": ###REPLACE###
}

###
@token = {{login.response.body.sessionToken}}


### TESTS BEGIN

### Test 01: Get one existing denominacionorigen by its id.
### positive test 
@denId = {{denominacionorigen.response.body.0.denominacionID}}
GET {{BASE}}/denominacionorigen/{{denId}} 
Content-Type: application/json 


### Test 02: Try get one existing denominacionorigen by its nonexistent id.
### negative test 
GET {{BASE}}/denominacionorigen/999999999
Content-Type: application/json 


### Test 03: Add a new denominacionorigen successfully
### Positive test 
### We assume that the token has been aquired by the login request.
# @name newdenominacionorigen
POST {{BASE}}/denominacionorigen 
Content-Type: application/json 
Token: {{token}} 

{
	"denominacion": ###REPLACE###
} 

### Check the created denominacionorigen

@newdenominacionorigenid = {{newdenominacionorigen.response.body.lastId}}
GET {{BASE}}/denominacionorigen/{{newdenominacionorigenid}}
Content-Type: application/json 

### Test 04: Add a new denominacionorigen without a session token
### Negative test 
POST {{BASE}}/denominacionorigen 
Content-Type: application/json 

{ 
	"denominacion": ###REPLACE###
}

### Test 05: Modify an existing denominacionorigen 
### Positive test 
@denId = {{denominacionorigen.response.body.0.denominacionID}} 
PUT {{BASE}}/denominacionorigen/{{denId}} 
Content-Type: application/json 
Token: {{token}} 

{ 
	"denominacion": ###REPLACE###
}

### Check the modified denominacionorigen

GET {{BASE}}/denominacionorigen/{{newdenominacionorigenid}}
Content-Type: application/json 

### Test 06: Try to modify an existing denominacionorigen without a session token
### Negative test
@denId = {{denominacionorigen.response.body.0.denominacionID}}
PUT {{BASE}}/denominacionorigen/{{denId}}
Content-Type: application/json

{
	"denominacion": ###REPLACE###
}

### Test 07: Delete an existing denominacionorigen
### Positive test

### Create a new denominacionorigen, which we will delete
# @name createddenToDelete
POST {{BASE}}/denominacionorigen
Content-Type: application/json
Token: {{token}}

{
	"denominacion": ###REPLACE###
}

### Check the created denominacionorigen
@dendelId = {{createddenToDelete.response.body.lastId}}
GET {{BASE}}/denominacionorigen/{{dendelId}}
Content-Type: application/json 

### Delete the denominacionorigen
DELETE {{BASE}}/denominacionorigen/{{dendelId}}
Token: {{token}}

### Check the deleted denominacionorigen
GET {{BASE}}/denominacionorigen/{{dendelId}}
Content-Type: application/json 

### Test 08: Try to delete a denominacionorigen without a session token
### Negative test
DELETE {{BASE}}/denominacionorigen/{{denId}}

